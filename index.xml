<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>The Blog of Krishan Wyse</title><link>https://kwyse.github.io/</link><description>Recent content on The Blog of Krishan Wyse</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><lastBuildDate>Sun, 29 Dec 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://kwyse.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Books of 2019</title><link>https://kwyse.github.io/posts/books-of-2019/</link><pubDate>Sun, 29 Dec 2019 00:00:00 +0000</pubDate><guid>https://kwyse.github.io/posts/books-of-2019/</guid><description>I was a gamer. Was. Words on a page did not enrapture me to the degree that interactive media did. Symbiosis between the visual, aural, narrative, and interactive was beauty itself.
That's not to say I didn't read. Games have their fair share of text, but I had trouble maintaining focus when reading physical books. In fact, the first five Harry Potter books are the only fiction books I can recall reading in my life prior to graduating from university.</description></item><item><title>On Fundamentals</title><link>https://kwyse.github.io/posts/on-fundamentals/</link><pubDate>Wed, 28 Mar 2018 00:00:00 +0100</pubDate><guid>https://kwyse.github.io/posts/on-fundamentals/</guid><description>A recent vacation gave me time to catch up on my backlog of books. Stop Guessing, by Nat Greene, was my first target. It's a book about the tendency to guess solutions when faced with hard problems, and instead proposes a rigorous, fact-backed and systematic approach to problem solving. There is a chapter dedicated to understanding the fundamentals of the problem space that was particularly poignant to me.
If we define a hard problem as simply something that is resistant to guesses, impactful and yet hard to isolate and reproduce, then they're not uncommon in the life of a software developer.</description></item><item><title>Book Recommendation: Programming Rust</title><link>https://kwyse.github.io/posts/book-recommendation-programming-rust/</link><pubDate>Sun, 18 Feb 2018 00:00:00 +0000</pubDate><guid>https://kwyse.github.io/posts/book-recommendation-programming-rust/</guid><description>Most of us can agree that Rust's learning curve is steep. I've been using it for hobby projects for the last few years but I'm still hesitant to use it when I'm constrained by a deadline, because of the upfront cost in development time. And that's frustrating, because I really believe that the benefits it offers outweigh that.
Programming Rust is included in the latest Humble Functional Programming book bundle. Take a look on Amazon and you'll see it's getting some pretty rave reviews.</description></item><item><title>This Week I Discovered: Vasovagal Syncope</title><link>https://kwyse.github.io/posts/twid-vasovagal-syncope/</link><pubDate>Sun, 04 Feb 2018 00:00:00 +0000</pubDate><guid>https://kwyse.github.io/posts/twid-vasovagal-syncope/</guid><description>I sprained my ankle during the week before last. Walking was painful for the subsequent few days but it was manageable. The pain was moderate but tolerable. Then this past Tuesday I fainted! And it's related.
The medical professionals tell me that I'm completely healthy, and what happened to me is a case of vasovagal syncope. Vasovagal syncope is fainting because of your body overreacting to certain triggers. One of these triggers is pain, and it needn't even be severe pain!</description></item><item><title>This Week I Discovered: CliftonStrengths</title><link>https://kwyse.github.io/posts/twid-clifton-strenths/</link><pubDate>Sun, 28 Jan 2018 00:00:00 +0000</pubDate><guid>https://kwyse.github.io/posts/twid-clifton-strenths/</guid><description>I came across this talk by Scott Dinsmore. It's geared towards those who feel trapped trapped in their current circumstances, yet my main take-away was his recommendation on StrengthsFinder 2.0, now called CliftonStrengths. I took the plunge and bought it since this isn't the first time it's been recommended.
The book itself is only half of what you're getting as the back sleeve includes a code you can use to take the online assessment.</description></item><item><title>Five Month's Into the Hacker's Diet</title><link>https://kwyse.github.io/posts/five-months-into-hackers-diet/</link><pubDate>Thu, 25 Jan 2018 00:00:00 +0000</pubDate><guid>https://kwyse.github.io/posts/five-months-into-hackers-diet/</guid><description>I've always had weight problems. Only in recent years has it gotten under control and landed me comfortably in the overweight category, like I was last summer. It wasn't life threatening but it wasn't ideal either. For the most part it was stable, and I was stable living with it. Yet it only took one comment from a work colleague, one with harmless intention, to change my mind on that.</description></item><item><title>This Week I Discovered: Tmux</title><link>https://kwyse.github.io/posts/twid-tmux/</link><pubDate>Sun, 21 Jan 2018 00:00:00 +0000</pubDate><guid>https://kwyse.github.io/posts/twid-tmux/</guid><description>Tmux seems like a natural progression from last week's Vim Minimalism, right? It's associated with the typical Vim power user setup. I remember playing with it back when I first started using Vim as well. The problem I had was why. Vim already has panes, what many other applications would call split windows. And if you use a tiling window manager like i3, you have panes at the application level as well.</description></item><item><title>This Week I Discovered: Vim Minimalism</title><link>https://kwyse.github.io/posts/twid-vim-minimalism/</link><pubDate>Sun, 14 Jan 2018 00:00:00 +0000</pubDate><guid>https://kwyse.github.io/posts/twid-vim-minimalism/</guid><description>Last month marked four years since I started my dotfiles repository on GitHub. Now it's in a state of disrepair! I had no idea that I hadn't made a single commit to it throughout 2017. I did though, I just didn't push them. There are local changes on every computer that I work with. Some were the results of experiments I later forgot about and others were quickly-needed hacks that I didn't find time to refactor and stabilise.</description></item><item><title>Hugo, Two Weeks In</title><link>https://kwyse.github.io/posts/hugo-two-weeks-in/</link><pubDate>Thu, 11 Jan 2018 00:00:00 +0000</pubDate><guid>https://kwyse.github.io/posts/hugo-two-weeks-in/</guid><description>My last post about Hugo focused on getting it set up. It finished with a few ideas on improvements. Maybe you've noticed a few implemented since then =]
One-liner improvements Some of these were very simple to add. The theme I'm using, Minimo, supports adding a reading time to posts with one addition to config.toml.
showReadingTime = true It's a small addition yet adds noted value for the reader.
The next change instead provides insight for the sight maintainer:</description></item><item><title>This Week I Discovered: RSS</title><link>https://kwyse.github.io/posts/twid-rss/</link><pubDate>Sun, 07 Jan 2018 00:00:00 +0000</pubDate><guid>https://kwyse.github.io/posts/twid-rss/</guid><description>This is actually a rediscovery. A colleague was telling me about Feedly back in 2013 when I was scrambling around in my first job. I had narrower interests that were sufficiently sated with GameTrailers.com and other video-heavy publications. Times have changed! My interests are broader. Commutes (often without Internet access) are the best times to peruse news. I want to give priority to news targeted at my interests rather than news discovery.</description></item><item><title>Grokking Entity-Component-Systems</title><link>https://kwyse.github.io/posts/grokking-entity-component-systems/</link><pubDate>Wed, 03 Jan 2018 00:00:00 +0000</pubDate><guid>https://kwyse.github.io/posts/grokking-entity-component-systems/</guid><description>I've spent many commutes in the last few months learning the intricacies of Specs, an entity-component-system (ECS) written in Rust and, to be more broad, ECSs in general. ECSs have proved to be a much deeper topic than I had initially anticipated. Now I'd like to explain my findings in order to solidify that knowledge.
ECSs are a decoupling pattern. They're most frequently seen in game development where we often have many similar yet distinct types of game objects.</description></item><item><title>This Week I Discovered: OpenMW</title><link>https://kwyse.github.io/posts/twid-open-mw/</link><pubDate>Sun, 31 Dec 2017 00:00:00 +0000</pubDate><guid>https://kwyse.github.io/posts/twid-open-mw/</guid><description>Two weeks back I installed Gentoo with the intention to use it as my primary desktop. Naturally I need games to play. My go-to benchmark for the state of Linux gaming has always been the Wine Application Database, so I checked it for a game I knew I could sink countless hours into.
Well it turns out the results for Oblivion are not too promising, especially for Steam. Maybe Morrowind fairs better?</description></item><item><title>Hail, Hugo!</title><link>https://kwyse.github.io/posts/hail-hugo/</link><pubDate>Thu, 28 Dec 2017 00:00:00 +0000</pubDate><guid>https://kwyse.github.io/posts/hail-hugo/</guid><description>One of my goals this holiday season was to relaunch my blog. My previous attempt failed because there was too much friction in actually blogging. It was an Iron-backed Rust web app using PostgreSQL and Diesel on a DigitalOcean host behind NGINX. It was my first time using most of these technologies for anything serious. I learnt a lot about them in the course of building that blog but the fifth blog post never saw the light of day.</description></item></channel></rss>